{"version":3,"sources":["components/Loading.js","components/RepoList.js","components/User.js","components/PopularUsers.js","components/SearchBar.js","components/Organization.js","components/UserInfo.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","RepoList","props","repoUserName","useState","repoList","setRepoList","useEffect","a","fetch","then","response","json","data","newList","slice","map","i","name","catch","error","console","log","fetchData","length","User","style","userStyle","src","avatarUrl","alt","to","userName","type","MOST_POPULAR","PopularUsers","list","setList","loading","setLoading","flexDirection","setStyle","items","item","avatar_url","login","node_id","onClick","e","SearchBar","searchValue","setSearchValue","lSValues","setLSValues","JSON","parse","localStorage","getItem","onChange","target","value","placeholder","history","updatedHistory","concat","setItem","stringify","Organization","URL","organizations_url","setLogin","avatar","setAvatar","organization_url","setOrganization_url","href","rel","UserInfo","params","username","useParams","setAvatar_url","html_url","setHtml_url","followers","setFollowers","following","setFollowing","setName","location","setLocation","setType","setOrganizations_url","getProfile","Footer","App","showScroll","setShowScroll","window","addEventListener","pageYOffset","backgroundImage","scrollTo","top","behavior","height","display","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a424e89e.chunk.js","sourcesContent":["export default function Loading() {\r\n  return <div className=\"modal\"></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction RepoList(props) {\r\n  const repoUserName = props.repoUserName;\r\n  const [repoList, setRepoList] = useState([]);\r\n\r\n  //on page load get repo names\r\n  //only get first 3 results and push to repolist.\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await fetch(`https://api.github.com/users/${repoUserName}/repos`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let size = 3;\r\n          let items = data.slice(0, size);\r\n          let newList = items.map((i) => {\r\n            return i.name;\r\n          });\r\n          setRepoList(newList);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"no user found\");\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [repoUserName]);\r\n\r\n  if (repoList.length === 0) {\r\n    return <h5>No Repos found :(</h5>;\r\n  } else {\r\n    return (\r\n      <div className=\"repolist\">\r\n        <h5>Last 3 Repos:</h5>\r\n        <div>\r\n          <p>{repoList[0]}</p>\r\n          <p>{repoList[1]}</p>\r\n          <p>{repoList[2]}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepoList;\r\n","import React from \"react\";\r\nimport RepoList from \"./RepoList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction User(props) {\r\n  return (\r\n    <ul className=\"single-popular-user\" style={props.userStyle}>\r\n      <img className=\"avatar\" src={props.avatarUrl} alt=\"user_avatar\" />\r\n      <div className=\"details\">\r\n        <h4>\r\n          User Name:{\" \"}\r\n          <Link to={`/gh-app-pages/${props.userName}`}> {props.userName}</Link>\r\n        </h4>\r\n        <h5>User Type: {props.type}</h5>\r\n      </div>\r\n      <RepoList repoUserName={props.userName} />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport User from \"./User\";\r\n\r\n//URL to get most popular users from github api\r\nconst MOST_POPULAR =\r\n  \"https://api.github.com/search/users?q=followers%3A%3E%3D1000&ref=searchresults&s=followers&type=Users\";\r\n\r\nfunction PopularUsers(props) {\r\n  const [list, setList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [style, setStyle] = useState({ flexDirection: \"column\" });\r\n\r\n  //on page load, get most popular users, and push them to the list array using User component.\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchData() {\r\n      await fetch(MOST_POPULAR)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const items = data.items.map((item) => {\r\n            return (\r\n              <User\r\n                avatarUrl={item.avatar_url}\r\n                userName={item.login}\r\n                type={item.type}\r\n                key={item.node_id}\r\n              />\r\n            );\r\n          });\r\n          setList(items);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"something went wrong, no time to figure shit out, deadline is on 5th of January dog.\"\r\n          );\r\n        });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setListView = (e) => {\r\n    setStyle({ flexDirection: \"column\" });\r\n  };\r\n  const setGridView = (e) => {\r\n    setStyle({ flexDirection: \"row\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"popular-container\">\r\n        <p className=\"popular-header\">Most Followed People Of GitHub</p>\r\n        <div className=\"buttons\">\r\n          <button onClick={setListView}>List View</button>\r\n          <button onClick={setGridView}>Grid View</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"popular-users-container\" style={style}>\r\n          {loading && <Loading />}\r\n          {list}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopularUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SearchBar(props) {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [lSValues, setLSValues] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  //creates local storage pair with an array of searches on SUBMIT CLICK.\r\n  //also sets the state to the current values so we can use it.\r\n  const handleClick = (e) => {\r\n    const maxHistoryLength = 3;\r\n    const history = JSON.parse(localStorage.getItem(\"searchHistory\") || \"[]\");\r\n    const isHistoryMaxed = history.length === maxHistoryLength;\r\n    const workingHistory = isHistoryMaxed ? history.slice(1) : history;\r\n    const updatedHistory = workingHistory.concat(searchValue);\r\n    localStorage.setItem(\"searchHistory\", JSON.stringify(updatedHistory));\r\n    setLSValues(JSON.parse(localStorage.getItem(\"searchHistory\") || \"[]\"));\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  //checks for local storage on initial load / reaload\r\n  useEffect(() => {\r\n    setLSValues(JSON.parse(localStorage.getItem(\"searchHistory\") || \"[]\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <Link className=\"home-link\" to={\"/gh-app-pages/\"}>\r\n        <img\r\n          className=\"home-icon\"\r\n          src=\"../gh-app-pages/img/home-icon.png\"\r\n          alt=\"home-icon\"\r\n        />\r\n        <p>Home</p>\r\n      </Link>\r\n\r\n      <div className=\"search-container\">\r\n        <div className=\"search-input\">\r\n          <p className=\"search-label\">User Search</p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={searchValue}\r\n            className=\"form-control\"\r\n            name=\"keyword\"\r\n            placeholder=\"User Name\"\r\n          />\r\n          <Link to={`/gh-app-pages/${searchValue}`}>\r\n            <button onClick={handleClick}>Search</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"search-history\">\r\n          {lSValues[0] && (\r\n            <p>\r\n              {lSValues[0]} {lSValues[1]} {lSValues[2]}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"title-wrapper\">\r\n        <p>Github Search</p>\r\n        <p>Dev By Mikael</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Organization(props) {\r\n  const URL = props.organizations_url;\r\n  const [login, setLogin] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [organization_url, setOrganization_url] = useState(\"\");\r\n\r\n  //on page load, or URL change, fetch orgzanzation info and setstates\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await fetch(URL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.length > 0) {\r\n            setLogin(data[0].login);\r\n            setAvatar(data[0].avatar_url);\r\n            setOrganization_url(`https://github.com/${login}`);\r\n          } else {\r\n            setLogin(\"\");\r\n            setAvatar(\"\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"no user found\");\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [URL]);\r\n\r\n  //two different returns based on if user is found or not.\r\n  if (login) {\r\n    return (\r\n      <>\r\n        <p>Organization:</p>\r\n        <img className=\"organization-avatar-img\" src={avatar} alt=\"avatar\" />\r\n        <p>\r\n          <a href={organization_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {login}\r\n          </a>\r\n        </p>\r\n      </>\r\n    );\r\n  } else {\r\n    return <li>No Organization found</li>;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RepoList from \"./RepoList\";\r\nimport Organization from \"./Organization\";\r\nimport Loading from \"./Loading\";\r\n\r\nexport default function UserInfo(params) {\r\n  let { username } = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [avatar_url, setAvatar_url] = useState(\"\");\r\n  const [html_url, setHtml_url] = useState(\"\");\r\n  const [followers, setFollowers] = useState(\"\");\r\n  const [following, setFollowing] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [organizations_url, setOrganizations_url] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n\r\n  //on page load, get the username fetch and assign values to states.\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function getProfile() {\r\n      await fetch(`https://api.github.com/users/${username}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"data \" + data.login);\r\n          setLogin(data.login);\r\n          setAvatar_url(data.avatar_url);\r\n          setFollowers(data.followers);\r\n          setFollowing(data.following);\r\n          setName(data.name);\r\n          setLocation(data.location);\r\n          setType(data.type);\r\n          setLoading(false);\r\n          setHtml_url(data.html_url);\r\n          setOrganizations_url(data.organizations_url);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"no user found\");\r\n        });\r\n    }\r\n    getProfile();\r\n  }, [username]);\r\n\r\n  // display user info if Login is defined, if not \"not found\" text.\r\n\r\n  if (login) {\r\n    return (\r\n      <div className=\"userInfo\">\r\n        {loading && <Loading />}\r\n\r\n        <div className=\"details-container\">\r\n          <div className=\"first\">\r\n            <img className=\"avatar-img\" src={avatar_url} alt=\"avatar\" />\r\n            <p className=\"userName\">\r\n              <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {username}\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"details-children second\">\r\n            <div className=\"details\">\r\n              <p>\r\n                Name: <b>{name ? name : username}</b>\r\n              </p>\r\n              <p>\r\n                Location: <b>{location}</b>\r\n              </p>\r\n              <p>\r\n                Followers: <b>{followers}</b>\r\n              </p>\r\n              <p>\r\n                Following: <b>{following}</b>\r\n              </p>\r\n              <p>\r\n                User Type: <b>{type}</b>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"details-children fourth\">\r\n            <RepoList className=\"userRepoList\" repoUserName={username} />\r\n          </div>\r\n          <div className=\"details-children third\">\r\n            <Organization organizations_url={organizations_url} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        {loading && <Loading />}\r\n        <div className=\"no-user\">\r\n          <p>Unfortunately we couldn't find any user by that name.</p>\r\n          <p>\r\n            Try searching for someone else, or check out top 30 most followed\r\n            users of github on our home page.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>Github Search</p>\r\n      <p>Dev By Mikael</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport PopularUsers from \"./components/PopularUsers\";\nimport SearchBar from \"./components/SearchBar\";\nimport UserInfo from \"./components/UserInfo\";\nimport { FaArrowCircleUp } from \"react-icons/fa\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [showScroll, setShowScroll] = useState(false);\n\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 400) {\n      setShowScroll(true);\n    } else if (showScroll && window.pageYOffset <= 400) {\n      setShowScroll(false);\n    }\n  };\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  window.addEventListener(\"scroll\", checkScrollTop);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div\n          className=\"app-container\"\n          style={{ backgroundImage: \"url(/gh-app-pages/img/frame.png)\" }}\n        >\n          <FaArrowCircleUp\n            className=\"scrollTop\"\n            onClick={scrollTop}\n            style={{ height: 40, display: showScroll ? \"flex\" : \"none\" }}\n          />\n          <SearchBar />\n          <Route exact path=\"/gh-app-pages/\" component={PopularUsers} />\n          <Route path=\"/gh-app-pages/:username\" component={UserInfo} />\n          <Footer />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n//\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a functions\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}